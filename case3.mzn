I = 15;
J = 29;
C = 3073;
CV = 3;
CC = 12;
O_i = [36, 66, 61, 67, 67, 34, 47, 63, 40, 61, 36, 61, 56, 40, 67];
V_i = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0];
D_ij = 
[|272, 218, 202, 253, 234, 227, 273, 187, 235, 272, 262, 248, 283, 264, 288, 165, 215, 248, 264, 202, 193, 285, 155, 262, 228, 242, 242, 277, 201
|98, 63, 35, 85, 16, 23, 95, 65, 90, 121, 112, 73, 141, 134, 119, 117, 134, 115, 107, 123, 43, 92, 116, 62, 57, 136, 128, 110, 44
|256, 204, 192, 237, 226, 218, 257, 173, 218, 253, 244, 233, 263, 244, 270, 145, 193, 228, 246, 181, 182, 270, 135, 250, 214, 220, 221, 260, 190
|115, 95, 73, 107, 40, 53, 110, 103, 118, 142, 134, 96, 161, 159, 134, 156, 167, 142, 128, 159, 82, 100, 155, 73, 86, 166, 157, 127, 82
|136, 80, 68, 116, 103, 94, 135, 49, 100, 139, 129, 110, 154, 137, 152, 50, 99, 118, 129, 83, 57, 147, 40, 125, 90, 120, 117, 142, 65
|176, 137, 144, 160, 181, 168, 179, 115, 138, 165, 157, 160, 169, 150, 185, 65, 96, 139, 161, 88, 135, 196, 63, 185, 149, 124, 127, 176, 137
|267, 275, 260, 270, 224, 237, 262, 290, 289, 295, 293, 263, 310, 317, 277, 342, 344, 307, 286, 339, 270, 243, 342, 234, 264, 334, 325, 276, 268
|225, 190, 199, 211, 235, 223, 228, 170, 188, 210, 204, 212, 211, 192, 231, 119, 140, 185, 209, 136, 190, 247, 117, 238, 202, 165, 171, 224, 192
|326, 354, 389, 333, 404, 393, 330, 368, 326, 298, 305, 345, 279, 282, 309, 339, 293, 300, 311, 308, 387, 345, 349, 367, 359, 281, 289, 314, 379
|205, 158, 123, 189, 124, 129, 202, 141, 188, 224, 215, 178, 244, 234, 225, 177, 216, 213, 211, 202, 122, 200, 170, 169, 158, 228, 222, 216, 132
|303, 256, 252, 285, 287, 277, 305, 228, 264, 294, 286, 283, 300, 280, 314, 188, 227, 269, 290, 218, 241, 321, 181, 304, 267, 254, 257, 304, 247
|180, 172, 198, 174, 227, 214, 185, 169, 154, 155, 154, 181, 147, 133, 177, 124, 100, 137, 161, 109, 192, 205, 131, 210, 182, 111, 120, 173, 188
|183, 156, 173, 171, 207, 194, 187, 143, 148, 165, 160, 174, 164, 146, 187, 90, 96, 141, 166, 95, 164, 206, 93, 202, 168, 119, 125, 180, 164
|181, 234, 253, 199, 229, 231, 180, 264, 220, 190, 197, 204, 189, 207, 169, 295, 259, 215, 194, 266, 261, 167, 303, 191, 224, 234, 229, 179, 251
|314, 343, 377, 321, 392, 381, 318, 357, 314, 286, 294, 333, 267, 270, 297, 329, 282, 289, 299, 297, 376, 332, 339, 355, 347, 270, 277, 302, 368
|];
E_ij = 
[|445, 363, 340, 416, 388, 377, 445, 317, 389, 444, 430, 408, 461, 433, 468, 284, 359, 408, 432, 339, 325, 463, 269, 429, 378, 399, 400, 452, 338
|214, 160, 118, 194, 91, 101, 209, 163, 201, 248, 234, 176, 278, 268, 245, 242, 267, 239, 227, 251, 131, 204, 240, 159, 152, 271, 259, 232, 132
|446, 367, 350, 417, 401, 388, 447, 321, 388, 441, 427, 410, 456, 427, 467, 279, 351, 404, 430, 332, 334, 467, 264, 436, 383, 392, 393, 452, 346
|239, 210, 177, 227, 127, 147, 233, 222, 244, 280, 269, 211, 309, 306, 268, 301, 318, 280, 260, 305, 191, 218, 300, 177, 197, 316, 303, 258, 190
|271, 187, 169, 241, 222, 208, 270, 141, 217, 276, 261, 232, 298, 272, 296, 142, 216, 244, 261, 192, 153, 288, 128, 254, 202, 248, 243, 280, 164
|299, 239, 251, 275, 305, 287, 302, 207, 241, 281, 270, 275, 288, 259, 312, 132, 179, 243, 276, 166, 236, 329, 128, 312, 257, 220, 225, 299, 240
|447, 460, 438, 452, 384, 403, 440, 482, 481, 490, 486, 441, 513, 523, 462, 560, 563, 508, 476, 555, 452, 412, 561, 398, 443, 548, 535, 462, 449
|401, 348, 362, 379, 416, 398, 405, 318, 345, 378, 369, 381, 380, 351, 410, 242, 273, 341, 376, 267, 348, 433, 239, 420, 366, 311, 319, 399, 351
|529, 572, 624, 540, 647, 630, 536, 592, 529, 487, 498, 557, 458, 463, 504, 549, 480, 491, 507, 502, 621, 557, 564, 591, 578, 462, 473, 511, 609
|369, 299, 246, 345, 247, 255, 364, 273, 343, 398, 383, 328, 427, 412, 399, 327, 385, 381, 378, 364, 245, 361, 316, 315, 298, 404, 394, 386, 259
|491, 420, 414, 464, 467, 452, 493, 379, 432, 477, 465, 461, 486, 456, 507, 318, 377, 439, 471, 363, 398, 517, 308, 493, 437, 418, 422, 493, 407
|332, 319, 358, 322, 402, 382, 338, 315, 293, 294, 293, 332, 282, 260, 327, 247, 212, 267, 303, 224, 349, 368, 258, 376, 334, 228, 241, 321, 344
|331, 290, 315, 312, 367, 347, 336, 270, 279, 304, 296, 317, 302, 275, 337, 192, 201, 268, 305, 199, 303, 365, 196, 359, 308, 235, 244, 327, 302
|311, 391, 419, 339, 383, 386, 310, 437, 370, 325, 336, 346, 323, 351, 294, 483, 429, 363, 331, 440, 432, 290, 495, 327, 376, 391, 383, 308, 417
|538, 582, 633, 549, 656, 639, 545, 602, 539, 497, 508, 567, 467, 472, 512, 560, 491, 500, 516, 513, 631, 566, 575, 600, 588, 472, 483, 520, 619
|];

% Define sets I and J
int: I;
int: J;

int: C; % Cost of installing a warehouse in all zones
int: CV; % Capacity in green zone
int: CC; % Capacity in blue zone

array[1..I] of int: O_i; % Emissions per operation for each warehouse i
array[1..I, 1..J] of int: D_ij; % Distance between warehouse i and store j
array[1..I, 1..J] of int: E_ij; % Transportation emissions
array[1..I] of int: V_i; % 1 if warehouse i is in the green zone, 0 if in the blue zone

% Define decision variables
array[1..I, 1..J] of var 0..1: X; % 1 if warehouse i supplies store j, 0 otherwise
array[1..I] of var 0..1: Y;

% Define constraints

% Add the constraint to ensure Y_i is 1 if the warehouse I supplies at least one store
constraint forall(i in 1..I)(
  sum(j in 1..J)(X[i,j]) > 0 -> Y[i] == 1
);

% Emissions constraint
constraint sum(i in 1..I, j in 1..J)(E_ij[i, j] * X[i, j]) + sum(i in 1..I)(O_i[i] * Y[i]) <= 500 * J;

% Assignment constraint
constraint forall(j in 1..J)(sum(i in 1..I)(X[i, j]) == 1);

% Green zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * V_i[i]) <= CV);

% Blue zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * (1 - V_i[i])) <= CC);

% Solve the optimization problem using a solver
% Define the objective function
solve minimize sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i]);

output ["Solution:", ""];
output ["X = \n", show2d(X), ";"];
output ["\n"];
output ["Y = ", show(Y), ";"];
output ["\n"];
output ["FO = ", show(sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i])), "\n"];