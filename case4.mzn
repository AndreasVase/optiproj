I = 22;
J = 40;
C = 3073;
CV = 4;
CC = 15;
O_i = [36, 66, 61, 67, 67, 34, 47, 63, 40, 61, 36, 61, 56, 40, 67, 56, 34, 36, 36, 68, 39, 40];
V_i = [0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0];
D_ij = 
[|211, 279, 262, 248, 283, 264, 288, 165, 215, 248, 264, 202, 193, 285, 155, 262, 228, 242, 242, 277, 201, 263, 213, 201, 230, 238, 185, 255, 247, 253, 297, 222, 162, 234, 249, 213, 297, 232, 162, 184
|40, 119, 112, 73, 141, 134, 119, 117, 134, 115, 107, 123, 43, 92, 116, 62, 57, 136, 128, 110, 44, 69, 55, 123, 21, 82, 114, 59, 50, 69, 109, 101, 116, 45, 47, 75, 118, 18, 97, 112
|199, 260, 244, 233, 263, 244, 270, 145, 193, 228, 246, 181, 182, 270, 135, 250, 214, 220, 221, 260, 190, 250, 200, 180, 221, 222, 165, 242, 235, 239, 281, 203, 142, 222, 238, 197, 280, 223, 145, 164
|76, 137, 134, 96, 161, 159, 134, 156, 167, 142, 128, 159, 82, 100, 155, 73, 86, 166, 157, 127, 82, 82, 89, 158, 50, 109, 151, 75, 70, 88, 116, 132, 154, 71, 63, 109, 129, 45, 137, 150
|74, 144, 129, 110, 154, 137, 152, 50, 99, 118, 129, 83, 57, 147, 40, 125, 90, 120, 117, 142, 65, 125, 75, 83, 97, 101, 65, 117, 110, 115, 159, 91, 46, 97, 113, 76, 160, 100, 33, 63
|145, 174, 157, 160, 169, 150, 185, 65, 96, 139, 161, 88, 135, 196, 63, 185, 149, 124, 127, 176, 137, 182, 137, 88, 172, 145, 79, 177, 173, 170, 203, 119, 65, 162, 178, 125, 197, 176, 81, 80
|261, 286, 293, 263, 310, 317, 277, 342, 344, 307, 286, 339, 270, 243, 342, 234, 264, 334, 325, 276, 268, 241, 271, 338, 234, 279, 335, 241, 240, 253, 250, 308, 341, 248, 234, 289, 265, 229, 324, 334
|199, 219, 204, 212, 211, 192, 231, 119, 140, 185, 209, 136, 190, 247, 117, 238, 202, 165, 171, 224, 192, 234, 191, 136, 227, 196, 131, 230, 227, 222, 251, 168, 119, 216, 232, 177, 244, 231, 136, 132
|378, 304, 305, 345, 279, 282, 309, 339, 293, 300, 311, 308, 387, 345, 349, 367, 359, 281, 289, 314, 379, 358, 363, 309, 396, 334, 325, 364, 370, 352, 332, 318, 343, 372, 376, 344, 317, 400, 357, 327
|135, 224, 215, 178, 244, 234, 225, 177, 216, 213, 211, 202, 122, 200, 170, 169, 158, 228, 222, 216, 132, 176, 150, 201, 128, 182, 186, 167, 158, 175, 216, 192, 174, 150, 154, 166, 225, 125, 156, 184
|256, 303, 286, 283, 300, 280, 314, 188, 227, 269, 290, 218, 241, 321, 181, 304, 267, 254, 257, 304, 247, 303, 254, 217, 281, 269, 206, 296, 290, 291, 329, 246, 186, 278, 294, 246, 325, 284, 196, 206
|192, 166, 154, 181, 147, 133, 177, 124, 100, 137, 161, 109, 192, 205, 131, 210, 182, 111, 120, 173, 188, 202, 178, 109, 217, 164, 119, 203, 204, 191, 203, 136, 127, 198, 210, 158, 191, 223, 146, 121
|170, 175, 160, 174, 164, 146, 187, 90, 96, 141, 166, 95, 164, 206, 93, 202, 168, 119, 125, 180, 164, 197, 159, 96, 197, 157, 96, 194, 192, 184, 209, 129, 92, 183, 198, 143, 200, 202, 111, 97
|242, 181, 197, 204, 189, 207, 169, 295, 259, 215, 194, 266, 261, 167, 303, 191, 224, 234, 229, 179, 251, 189, 238, 266, 230, 215, 277, 198, 206, 198, 155, 237, 297, 219, 205, 240, 158, 229, 291, 277
|367, 292, 294, 333, 267, 270, 297, 329, 282, 289, 299, 297, 376, 332, 339, 355, 347, 270, 277, 302, 368, 346, 351, 298, 384, 322, 315, 352, 358, 340, 320, 307, 332, 360, 364, 333, 305, 389, 347, 317
|242, 324, 309, 285, 333, 316, 331, 220, 273, 297, 309, 258, 223, 320, 210, 293, 264, 298, 296, 320, 234, 296, 250, 257, 254, 279, 240, 286, 278, 288, 334, 271, 217, 265, 278, 255, 337, 254, 211, 239
|247, 178, 177, 216, 152, 152, 185, 208, 161, 170, 183, 176, 255, 221, 218, 240, 228, 149, 157, 188, 247, 231, 231, 177, 265, 203, 193, 236, 241, 223, 210, 186, 212, 241, 248, 212, 195, 270, 226, 195
|145, 125, 137, 121, 147, 158, 114, 216, 198, 155, 130, 198, 162, 88, 221, 96, 133, 180, 172, 117, 154, 99, 147, 198, 125, 137, 202, 105, 110, 111, 88, 165, 217, 123, 106, 156, 101, 123, 205, 201
|427, 361, 360, 399, 336, 335, 368, 376, 337, 352, 367, 350, 434, 404, 385, 423, 410, 330, 338, 371, 427, 414, 412, 351, 447, 386, 366, 420, 425, 407, 393, 366, 380, 424, 431, 392, 378, 452, 397, 368
|167, 141, 154, 141, 161, 174, 129, 237, 216, 172, 148, 217, 184, 106, 242, 118, 154, 197, 189, 134, 176, 120, 168, 217, 147, 157, 222, 126, 132, 132, 104, 184, 238, 145, 128, 177, 116, 145, 226, 221
|231, 295, 279, 266, 298, 279, 305, 180, 228, 263, 281, 216, 214, 304, 170, 282, 247, 256, 256, 295, 222, 283, 233, 215, 251, 256, 200, 275, 268, 273, 315, 238, 177, 254, 270, 231, 314, 254, 180, 199
|252, 311, 312, 274, 337, 337, 306, 325, 345, 321, 305, 335, 252, 270, 321, 249, 265, 345, 336, 301, 255, 258, 266, 334, 228, 288, 325, 252, 248, 265, 284, 311, 323, 250, 241, 286, 298, 222, 304, 323
|];
E_ij = 
[|352, 454, 430, 408, 461, 433, 468, 284, 359, 408, 432, 339, 325, 463, 269, 429, 378, 399, 400, 452, 338, 431, 356, 338, 381, 393, 314, 418, 407, 416, 482, 369, 279, 387, 410, 355, 481, 384, 280, 313
|127, 244, 234, 176, 278, 268, 245, 242, 267, 239, 227, 251, 131, 204, 240, 159, 152, 271, 259, 232, 132, 169, 149, 250, 98, 189, 238, 155, 142, 169, 229, 217, 240, 133, 136, 179, 243, 93, 212, 235
|360, 452, 427, 410, 456, 427, 467, 279, 351, 404, 430, 332, 334, 467, 264, 436, 383, 392, 393, 452, 346, 436, 361, 331, 392, 394, 309, 424, 414, 420, 483, 366, 274, 394, 418, 356, 481, 396, 279, 308
|182, 272, 269, 211, 309, 306, 268, 301, 318, 280, 260, 305, 191, 218, 300, 177, 197, 316, 303, 258, 190, 190, 201, 304, 142, 230, 294, 180, 172, 199, 241, 266, 299, 174, 162, 231, 260, 134, 272, 292
|178, 284, 261, 232, 298, 272, 296, 142, 216, 244, 261, 192, 153, 288, 128, 254, 202, 248, 243, 280, 164, 255, 180, 191, 212, 219, 165, 243, 232, 240, 306, 203, 136, 212, 236, 181, 307, 217, 116, 162
|251, 295, 270, 275, 288, 259, 312, 132, 179, 243, 276, 166, 236, 329, 128, 312, 257, 220, 225, 299, 240, 307, 240, 166, 292, 252, 153, 300, 294, 289, 338, 213, 132, 277, 302, 221, 330, 299, 155, 154
|439, 476, 486, 441, 513, 523, 462, 560, 563, 508, 476, 555, 452, 412, 561, 398, 443, 548, 535, 462, 449, 409, 454, 554, 398, 466, 550, 408, 408, 426, 423, 509, 559, 420, 398, 481, 445, 390, 533, 548
|362, 392, 369, 381, 380, 351, 410, 242, 273, 341, 376, 267, 348, 433, 239, 420, 366, 311, 319, 399, 351, 414, 350, 267, 403, 357, 259, 408, 403, 396, 440, 316, 242, 387, 411, 329, 429, 410, 267, 261
|607, 496, 498, 557, 458, 463, 504, 549, 480, 491, 507, 502, 621, 557, 564, 591, 578, 462, 473, 511, 609, 577, 585, 504, 634, 541, 528, 587, 596, 568, 538, 518, 554, 598, 605, 556, 516, 641, 576, 531
|264, 397, 383, 328, 427, 412, 399, 327, 385, 381, 378, 364, 245, 361, 316, 315, 298, 404, 394, 386, 259, 325, 286, 363, 253, 335, 340, 311, 298, 324, 386, 349, 322, 286, 293, 311, 399, 249, 295, 337
|421, 490, 465, 461, 486, 456, 507, 318, 377, 439, 471, 363, 398, 517, 308, 493, 437, 418, 422, 493, 407, 490, 417, 362, 457, 440, 346, 481, 472, 473, 530, 406, 316, 453, 478, 406, 524, 462, 330, 346
|349, 310, 293, 332, 282, 260, 327, 247, 212, 267, 303, 224, 349, 368, 258, 376, 334, 228, 241, 321, 344, 365, 328, 225, 387, 307, 240, 365, 367, 348, 365, 266, 252, 358, 377, 299, 347, 395, 280, 243
|311, 319, 296, 317, 302, 275, 337, 192, 201, 268, 305, 199, 303, 365, 196, 359, 308, 235, 244, 327, 302, 351, 295, 200, 352, 292, 200, 347, 345, 332, 370, 249, 194, 330, 353, 270, 357, 360, 223, 202
|404, 312, 336, 346, 323, 351, 294, 483, 429, 363, 331, 440, 432, 290, 495, 327, 376, 391, 383, 308, 417, 324, 397, 440, 385, 363, 456, 337, 349, 338, 273, 395, 486, 369, 348, 400, 277, 384, 477, 456
|617, 505, 508, 567, 467, 472, 512, 560, 491, 500, 516, 513, 631, 566, 575, 600, 588, 472, 483, 520, 619, 586, 594, 515, 643, 551, 539, 596, 605, 577, 547, 528, 566, 607, 614, 566, 525, 650, 588, 542
|420, 542, 519, 484, 556, 531, 553, 387, 466, 502, 519, 443, 391, 536, 371, 495, 452, 503, 500, 537, 407, 500, 431, 442, 437, 475, 416, 486, 473, 489, 557, 462, 381, 454, 473, 439, 562, 438, 373, 414
|404, 301, 300, 358, 263, 263, 312, 346, 276, 289, 309, 298, 417, 365, 361, 394, 376, 258, 270, 316, 405, 381, 381, 299, 432, 339, 324, 388, 396, 369, 349, 314, 352, 396, 406, 352, 327, 440, 373, 327
|254, 224, 241, 217, 257, 274, 208, 360, 333, 268, 232, 334, 279, 168, 368, 181, 236, 307, 295, 212, 268, 185, 256, 333, 223, 242, 339, 193, 201, 203, 169, 284, 362, 221, 196, 271, 188, 220, 344, 338
|677, 578, 577, 634, 540, 539, 588, 601, 541, 564, 586, 562, 687, 642, 614, 671, 651, 531, 544, 593, 677, 658, 654, 563, 707, 615, 585, 666, 673, 646, 626, 586, 606, 672, 683, 624, 603, 715, 631, 588
|318, 280, 299, 279, 310, 329, 262, 423, 392, 326, 290, 394, 344, 227, 431, 245, 300, 364, 352, 269, 332, 248, 320, 394, 288, 303, 401, 257, 266, 266, 225, 345, 425, 285, 261, 334, 242, 286, 408, 400
|386, 482, 458, 439, 486, 458, 497, 309, 382, 434, 460, 363, 360, 495, 295, 463, 410, 423, 424, 481, 372, 464, 389, 362, 416, 423, 340, 451, 441, 448, 512, 396, 305, 421, 444, 385, 511, 420, 309, 338
|418, 507, 508, 451, 545, 545, 499, 527, 558, 521, 498, 543, 418, 446, 522, 413, 438, 557, 544, 492, 423, 427, 440, 542, 382, 472, 528, 419, 412, 438, 466, 506, 524, 415, 402, 470, 487, 374, 496, 525
|];

% Define sets I and J
int: I;
int: J;

int: C; % Cost of installing a warehouse in all zones
int: CV; % Capacity in green zone
int: CC; % Capacity in blue zone

array[1..I] of int: O_i; % Emissions per operation for each warehouse i
array[1..I, 1..J] of int: D_ij; % Distance between warehouse i and store j
array[1..I, 1..J] of int: E_ij; % Transportation emissions
array[1..I] of int: V_i; % 1 if warehouse i is in the green zone, 0 if in the blue zone

% Define decision variables
array[1..I, 1..J] of var 0..1: X; % 1 if warehouse i supplies store j, 0 otherwise
array[1..I] of var 0..1: Y;

% Define constraints

% Add the constraint to ensure Y_i is 1 if the warehouse I supplies at least one store
constraint forall(i in 1..I)(
  sum(j in 1..J)(X[i,j]) > 0 -> Y[i] == 1
);

% Emissions constraint
constraint sum(i in 1..I, j in 1..J)(E_ij[i, j] * X[i, j]) + sum(i in 1..I)(O_i[i] * Y[i]) <= 500 * J;

% Assignment constraint
constraint forall(j in 1..J)(sum(i in 1..I)(X[i, j]) == 1);

% Green zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * V_i[i]) <= CV);

% Blue zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * (1 - V_i[i])) <= CC);

% Solve the optimization problem using a solver
% Define the objective function
solve minimize sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i]);

output ["Solution:", ""];
output ["X = \n", show2d(X), ";"];
output ["\n"];
output ["Y = ", show(Y), ";"];
output ["\n"];
output ["FO = ", show(sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i])), "\n"];