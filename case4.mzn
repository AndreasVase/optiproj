I = 23;
J = 34;
C = 2885;
CV = 4;
CC = 10;
O_i = [47, 22, 56, 29, 27, 48, 23, 57, 59, 34, 45, 50, 70, 31, 39, 58, 62, 23, 66, 53, 25, 59, 59];
V_i = [0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1];
D_ij = 
[|295, 302, 361, 347, 373, 303, 271, 339, 372, 351, 351, 260, 371, 363, 314, 370, 300, 302, 327, 356, 285, 278, 355, 296, 372, 349, 334, 280, 340, 300, 284, 348, 354, 379
|251, 246, 184, 198, 179, 244, 274, 217, 184, 203, 205, 285, 177, 200, 235, 191, 249, 260, 236, 189, 260, 268, 190, 259, 179, 208, 223, 273, 223, 245, 264, 206, 199, 167
|327, 313, 259, 272, 259, 320, 347, 297, 266, 283, 285, 358, 244, 283, 302, 273, 316, 340, 317, 263, 330, 337, 263, 338, 259, 269, 284, 351, 281, 318, 340, 269, 279, 237
|161, 141, 96, 106, 111, 156, 177, 145, 122, 131, 135, 189, 73, 141, 130, 131, 143, 185, 167, 97, 159, 165, 96, 179, 109, 97, 112, 189, 111, 150, 175, 97, 127, 68
|78, 47, 118, 105, 144, 84, 55, 128, 150, 131, 135, 53, 116, 153, 58, 153, 44, 121, 131, 112, 44, 34, 109, 105, 143, 89, 74, 96, 81, 69, 79, 89, 133, 127
|136, 91, 162, 150, 192, 141, 114, 182, 200, 183, 188, 113, 146, 206, 98, 205, 88, 180, 189, 154, 100, 90, 152, 164, 190, 111, 97, 156, 95, 125, 138, 114, 184, 160
|292, 278, 348, 334, 369, 300, 265, 343, 372, 351, 353, 254, 346, 369, 289, 372, 275, 316, 337, 341, 269, 260, 340, 305, 368, 316, 300, 289, 302, 291, 285, 317, 354, 358
|364, 310, 336, 335, 368, 364, 357, 386, 380, 376, 383, 362, 299, 396, 306, 389, 309, 409, 403, 331, 334, 330, 328, 395, 365, 276, 280, 395, 266, 348, 374, 282, 375, 309
|223, 171, 230, 221, 263, 227, 206, 264, 273, 261, 266, 207, 202, 284, 173, 280, 168, 270, 274, 223, 188, 180, 219, 254, 261, 165, 158, 248, 148, 210, 229, 171, 261, 216
|228, 229, 291, 277, 306, 236, 202, 275, 307, 286, 287, 191, 298, 300, 240, 306, 226, 242, 265, 286, 214, 206, 285, 234, 306, 274, 259, 217, 265, 231, 218, 274, 289, 307
|193, 138, 182, 176, 216, 195, 183, 224, 227, 218, 224, 187, 149, 240, 136, 235, 136, 239, 238, 175, 160, 155, 172, 224, 213, 116, 114, 222, 100, 178, 201, 122, 217, 163
|366, 369, 301, 316, 288, 358, 390, 323, 290, 310, 311, 402, 301, 302, 358, 294, 372, 364, 339, 307, 380, 388, 309, 366, 288, 334, 348, 382, 349, 362, 377, 332, 307, 289
|243, 190, 216, 214, 248, 243, 238, 264, 260, 255, 261, 244, 178, 276, 185, 269, 189, 287, 282, 210, 214, 212, 207, 274, 245, 155, 159, 274, 144, 228, 254, 160, 254, 190
|298, 303, 363, 349, 376, 306, 274, 343, 376, 355, 355, 262, 371, 368, 314, 374, 300, 307, 331, 358, 286, 279, 357, 301, 375, 348, 333, 284, 339, 302, 287, 348, 358, 380
|158, 124, 103, 109, 128, 154, 168, 156, 140, 143, 149, 179, 69, 159, 114, 150, 126, 191, 177, 101, 147, 150, 99, 181, 126, 75, 90, 189, 84, 145, 171, 77, 141, 72
|84, 46, 118, 105, 146, 89, 62, 132, 152, 134, 138, 62, 112, 156, 55, 156, 42, 128, 137, 111, 48, 38, 109, 112, 144, 83, 68, 104, 73, 73, 86, 84, 135, 124
|340, 324, 272, 285, 273, 334, 359, 312, 280, 297, 300, 371, 256, 297, 313, 288, 327, 354, 332, 276, 342, 349, 276, 352, 273, 280, 295, 365, 291, 331, 353, 280, 293, 249
|165, 112, 168, 160, 202, 168, 151, 203, 212, 199, 205, 153, 141, 223, 112, 219, 109, 212, 215, 161, 130, 123, 158, 196, 200, 104, 97, 192, 87, 151, 172, 109, 200, 156
|129, 77, 109, 104, 143, 129, 126, 153, 154, 146, 152, 133, 76, 168, 71, 162, 76, 173, 169, 102, 102, 100, 99, 159, 140, 43, 44, 160, 30, 113, 140, 49, 145, 90
|163, 159, 224, 209, 241, 171, 136, 213, 243, 222, 224, 125, 229, 239, 171, 243, 157, 185, 206, 218, 145, 137, 217, 174, 240, 204, 189, 158, 195, 164, 155, 204, 225, 238
|72, 123, 131, 121, 125, 75, 76, 87, 120, 102, 99, 73, 160, 106, 129, 114, 124, 44, 68, 130, 99, 104, 131, 48, 126, 164, 156, 40, 170, 87, 60, 160, 105, 160
|337, 320, 270, 282, 272, 331, 355, 311, 280, 296, 299, 367, 252, 297, 308, 287, 322, 353, 331, 273, 338, 344, 272, 350, 272, 274, 289, 363, 285, 328, 350, 274, 292, 245
|135, 89, 159, 147, 190, 141, 115, 181, 198, 181, 186, 114, 142, 204, 95, 203, 86, 180, 188, 151, 99, 90, 148, 165, 188, 106, 93, 157, 90, 124, 139, 109, 182, 156
|];
E_ij = 
[|490, 501, 589, 568, 607, 501, 454, 556, 605, 574, 574, 437, 603, 592, 518, 602, 497, 501, 537, 581, 475, 465, 580, 492, 606, 570, 548, 468, 557, 497, 473, 569, 579, 616
|399, 392, 299, 319, 291, 389, 433, 348, 299, 326, 329, 450, 288, 323, 375, 309, 396, 412, 376, 306, 412, 424, 307, 410, 290, 334, 357, 432, 357, 390, 418, 332, 321, 272
|547, 526, 445, 464, 445, 537, 576, 502, 455, 480, 484, 594, 423, 480, 509, 466, 530, 567, 532, 450, 552, 562, 450, 563, 444, 460, 483, 583, 478, 534, 566, 460, 475, 411
|271, 240, 174, 189, 195, 263, 295, 247, 212, 225, 232, 312, 139, 241, 224, 226, 244, 307, 279, 175, 268, 277, 174, 297, 193, 175, 198, 313, 195, 255, 291, 174, 220, 131
|144, 98, 205, 184, 244, 154, 109, 219, 252, 224, 229, 107, 201, 256, 114, 257, 93, 208, 224, 195, 93, 78, 191, 185, 241, 161, 138, 171, 148, 131, 146, 161, 226, 217
|252, 185, 291, 273, 337, 260, 220, 322, 348, 323, 330, 217, 268, 357, 195, 355, 180, 318, 331, 280, 198, 184, 276, 295, 334, 214, 194, 282, 190, 235, 256, 219, 325, 288
|461, 440, 545, 524, 577, 473, 420, 537, 581, 550, 553, 405, 542, 576, 456, 582, 436, 497, 528, 535, 427, 413, 533, 481, 575, 497, 474, 457, 476, 460, 450, 498, 554, 560
|603, 523, 562, 560, 609, 604, 593, 636, 627, 622, 631, 601, 506, 652, 516, 641, 521, 670, 662, 554, 558, 552, 550, 649, 605, 472, 477, 649, 456, 580, 618, 480, 619, 521
|394, 316, 404, 391, 454, 400, 369, 455, 469, 450, 458, 369, 362, 485, 319, 480, 312, 464, 471, 393, 341, 329, 388, 441, 451, 307, 297, 431, 281, 374, 403, 315, 450, 384
|376, 378, 471, 450, 494, 388, 338, 447, 495, 463, 464, 320, 481, 485, 395, 493, 374, 397, 432, 463, 355, 343, 461, 385, 493, 445, 422, 360, 431, 380, 361, 445, 467, 495
|334, 252, 318, 310, 369, 337, 319, 381, 386, 372, 381, 325, 269, 405, 249, 398, 250, 404, 402, 308, 285, 278, 303, 381, 365, 219, 216, 378, 196, 312, 347, 228, 371, 289
|599, 603, 502, 524, 482, 587, 635, 535, 485, 516, 517, 653, 502, 503, 588, 491, 608, 596, 559, 511, 620, 633, 513, 600, 483, 551, 573, 624, 574, 593, 615, 548, 511, 484
|435, 356, 394, 391, 442, 435, 428, 467, 460, 453, 462, 437, 338, 484, 348, 473, 354, 501, 493, 386, 392, 388, 381, 481, 438, 302, 308, 482, 287, 412, 451, 311, 451, 355
|478, 485, 576, 555, 595, 490, 442, 546, 595, 563, 564, 424, 588, 583, 502, 592, 481, 492, 528, 568, 461, 450, 567, 482, 594, 553, 531, 458, 539, 485, 462, 553, 568, 602
|276, 226, 194, 203, 231, 271, 291, 273, 249, 254, 263, 307, 142, 277, 210, 264, 228, 326, 305, 191, 259, 265, 188, 311, 228, 152, 174, 323, 165, 256, 296, 155, 250, 148
|184, 127, 236, 216, 277, 192, 152, 256, 286, 259, 265, 151, 226, 292, 141, 292, 122, 250, 263, 225, 130, 116, 221, 226, 274, 183, 160, 214, 168, 168, 187, 184, 261, 244
|572, 549, 471, 490, 472, 563, 601, 530, 483, 507, 512, 619, 447, 508, 532, 494, 553, 594, 560, 476, 576, 585, 476, 590, 471, 482, 505, 610, 499, 559, 592, 482, 502, 436
|271, 191, 276, 263, 326, 276, 249, 328, 341, 322, 331, 253, 235, 357, 192, 352, 187, 341, 345, 265, 218, 208, 260, 318, 323, 180, 168, 311, 153, 250, 281, 187, 323, 257
|259, 182, 229, 222, 280, 260, 255, 295, 297, 285, 294, 266, 180, 318, 173, 309, 181, 326, 319, 220, 219, 217, 215, 305, 277, 131, 133, 306, 112, 236, 276, 140, 283, 201
|298, 292, 389, 367, 415, 310, 258, 372, 418, 386, 389, 241, 396, 411, 309, 418, 288, 330, 362, 380, 271, 259, 378, 314, 414, 359, 336, 290, 345, 300, 285, 359, 391, 411
|134, 210, 221, 207, 213, 138, 139, 156, 205, 178, 174, 135, 266, 184, 218, 196, 211, 92, 128, 220, 174, 181, 222, 98, 214, 272, 260, 86, 280, 156, 115, 265, 183, 265
|565, 539, 464, 482, 468, 556, 592, 525, 479, 503, 507, 610, 437, 505, 522, 490, 542, 589, 556, 468, 566, 575, 468, 584, 467, 470, 493, 603, 486, 551, 585, 471, 497, 427
|262, 193, 298, 280, 344, 270, 232, 331, 356, 331, 339, 230, 272, 366, 202, 364, 188, 330, 342, 286, 208, 195, 282, 306, 341, 219, 199, 294, 194, 245, 268, 223, 333, 293
|];

% Define sets I and J
int: I;
int: J;

int: C; % Cost of installing a warehouse in all zones
int: CV; % Capacity in green zone
int: CC; % Capacity in blue zone

array[1..I] of int: O_i; % Emissions per operation for each warehouse i
array[1..I, 1..J] of int: D_ij; % Distance between warehouse i and store j
array[1..I, 1..J] of int: E_ij; % Transportation emissions
array[1..I] of int: V_i; % 1 if warehouse i is in the green zone, 0 if in the blue zone

% Define decision variables
array[1..I, 1..J] of var 0..1: X; % 1 if warehouse i supplies store j, 0 otherwise
array[1..I] of var 0..1: Y;

% Define constraints

% Add the constraint to ensure Y_i is 1 if the warehouse I supplies at least one store
constraint forall(i in 1..I)(
  sum(j in 1..J)(X[i,j]) > 0 -> Y[i] == 1
);

% Emissions constraint
constraint sum(i in 1..I, j in 1..J)(E_ij[i, j] * X[i, j]) + sum(i in 1..I)(O_i[i] * Y[i]) <= 500 * J;

% Assignment constraint
constraint forall(j in 1..J)(sum(i in 1..I)(X[i, j]) == 1);

% Green zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * V_i[i]) <= CV);

% Blue zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * (1 - V_i[i])) <= CC);

% Solve the optimization problem using a solver
% Define the objective function
solve minimize sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i]);

output ["Solution:", ""];
output ["X = \n", show2d(X), ";"];
output ["\n"];
output ["Y = ", show(Y), ";"];
output ["\n"];
output ["FO = ", show(sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i])), "\n"];