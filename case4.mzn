I = 22;
J = 40;
C = 1107;
CV = 4;
CC = 19;
O_i = [34, 57, 56, 64, 39, 63, 42, 62, 63, 22, 39, 40, 42, 36, 43, 29, 33, 56, 28, 43, 39, 27];
V_i = [0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 1];
D_ij = 
[|363, 421, 363, 346, 342, 352, 383, 328, 385, 395, 380, 371, 405, 399, 359, 398, 395, 381, 320, 338, 380, 383, 387, 406, 419, 394, 376, 450, 380, 347, 354, 386, 404, 330, 346, 353, 327, 350, 330, 392
|101, 114, 62, 108, 99, 126, 87, 82, 117, 122, 67, 168, 146, 106, 150, 130, 100, 55, 106, 96, 145, 76, 129, 93, 154, 184, 70, 166, 94, 93, 107, 188, 159, 87, 99, 153, 97, 62, 85, 166
|65, 66, 24, 79, 73, 95, 43, 65, 76, 78, 20, 135, 103, 59, 118, 86, 53, 9, 89, 72, 107, 29, 88, 45, 109, 147, 25, 118, 51, 64, 75, 152, 117, 68, 71, 123, 77, 34, 66, 127
|193, 148, 158, 211, 206, 225, 162, 201, 192, 188, 144, 257, 208, 165, 244, 195, 162, 130, 225, 206, 226, 149, 203, 140, 205, 261, 151, 191, 171, 197, 205, 269, 224, 204, 204, 250, 213, 171, 202, 241
|168, 230, 199, 148, 152, 140, 201, 156, 180, 188, 214, 130, 183, 205, 130, 186, 205, 227, 132, 151, 156, 211, 174, 226, 196, 148, 207, 230, 192, 161, 156, 137, 174, 153, 155, 123, 144, 187, 155, 156
|131, 85, 98, 150, 145, 162, 99, 143, 128, 125, 83, 193, 145, 102, 181, 132, 99, 71, 165, 146, 162, 87, 140, 77, 143, 198, 90, 132, 108, 136, 143, 206, 161, 145, 142, 187, 153, 112, 143, 177
|336, 284, 345, 351, 355, 346, 320, 372, 312, 303, 331, 333, 292, 303, 341, 299, 307, 337, 377, 360, 318, 325, 310, 303, 277, 313, 332, 247, 321, 351, 343, 322, 294, 369, 352, 347, 370, 356, 369, 309
|344, 280, 334, 364, 364, 366, 317, 373, 326, 317, 317, 373, 319, 305, 373, 318, 307, 314, 388, 367, 347, 314, 330, 293, 306, 360, 321, 273, 322, 357, 355, 371, 329, 373, 361, 380, 378, 348, 372, 347
|84, 148, 112, 63, 66, 60, 115, 69, 100, 109, 127, 75, 112, 122, 62, 109, 122, 140, 45, 64, 85, 124, 97, 141, 127, 99, 120, 159, 108, 74, 72, 93, 109, 65, 69, 57, 56, 99, 67, 96
|180, 128, 189, 197, 200, 193, 164, 216, 158, 148, 176, 189, 141, 146, 193, 145, 151, 183, 223, 205, 168, 169, 157, 147, 126, 173, 176, 93, 165, 196, 189, 183, 146, 214, 197, 200, 215, 200, 214, 163
|333, 374, 374, 319, 327, 303, 362, 341, 330, 333, 383, 265, 314, 356, 280, 326, 360, 400, 318, 329, 296, 376, 318, 381, 319, 261, 376, 342, 353, 335, 323, 252, 298, 336, 328, 275, 327, 366, 339, 281
|163, 130, 185, 175, 181, 166, 158, 200, 139, 131, 176, 149, 114, 139, 159, 125, 145, 188, 201, 185, 137, 168, 134, 150, 100, 129, 174, 77, 155, 179, 168, 138, 113, 196, 178, 164, 195, 193, 197, 125
|306, 266, 325, 319, 324, 309, 299, 344, 283, 274, 315, 287, 257, 280, 299, 268, 285, 324, 344, 329, 279, 307, 277, 287, 244, 265, 313, 219, 297, 322, 311, 273, 255, 340, 321, 304, 339, 334, 341, 266
|191, 129, 171, 212, 210, 219, 160, 214, 179, 172, 154, 238, 183, 154, 232, 175, 153, 149, 233, 212, 207, 154, 187, 135, 174, 234, 160, 147, 167, 201, 203, 244, 197, 215, 206, 239, 222, 186, 214, 216
|227, 274, 213, 217, 210, 229, 237, 190, 251, 260, 227, 263, 277, 256, 246, 265, 251, 224, 193, 205, 260, 233, 257, 255, 290, 287, 226, 315, 238, 212, 223, 284, 282, 194, 213, 243, 196, 201, 193, 277
|136, 72, 122, 157, 155, 162, 107, 162, 122, 114, 105, 180, 125, 98, 174, 118, 98, 104, 179, 158, 150, 103, 129, 81, 116, 176, 109, 92, 113, 148, 148, 186, 139, 162, 152, 181, 168, 136, 161, 158
|201, 258, 200, 185, 181, 193, 220, 165, 223, 233, 217, 218, 245, 236, 204, 237, 232, 219, 159, 176, 223, 220, 227, 243, 260, 242, 213, 289, 218, 185, 193, 237, 247, 167, 184, 199, 166, 186, 167, 237
|276, 340, 301, 256, 258, 250, 307, 256, 291, 299, 317, 245, 297, 314, 243, 298, 314, 328, 235, 256, 269, 315, 286, 333, 310, 262, 310, 344, 300, 266, 264, 252, 288, 254, 261, 236, 247, 287, 256, 271
|320, 273, 333, 335, 339, 327, 308, 357, 296, 287, 321, 311, 274, 289, 320, 283, 294, 328, 360, 344, 298, 314, 293, 292, 260, 289, 321, 231, 307, 336, 326, 299, 274, 354, 336, 326, 354, 344, 354, 287
|98, 152, 94, 86, 80, 98, 114, 61, 121, 131, 111, 135, 147, 131, 116, 135, 127, 115, 63, 75, 128, 114, 127, 137, 160, 158, 107, 187, 112, 82, 93, 156, 151, 64, 83, 115, 65, 80, 64, 147
|148, 92, 153, 165, 168, 164, 129, 182, 126, 116, 139, 165, 113, 112, 166, 115, 116, 146, 191, 172, 140, 133, 127, 111, 99, 152, 140, 65, 130, 163, 157, 163, 121, 180, 164, 173, 183, 165, 180, 140
|229, 182, 242, 244, 248, 237, 217, 266, 206, 196, 230, 225, 184, 198, 233, 192, 203, 238, 270, 253, 209, 223, 202, 202, 169, 205, 229, 140, 216, 245, 236, 215, 186, 263, 245, 239, 263, 252, 263, 200
|];
E_ij = 
[|578, 666, 579, 553, 548, 562, 609, 526, 612, 626, 604, 590, 642, 632, 572, 631, 627, 606, 514, 541, 605, 609, 615, 643, 663, 625, 599, 709, 605, 555, 566, 614, 640, 529, 553, 564, 525, 559, 529, 623
|208, 228, 150, 219, 206, 246, 188, 181, 233, 240, 157, 310, 277, 216, 282, 252, 207, 140, 216, 202, 275, 171, 251, 197, 288, 334, 163, 306, 198, 197, 217, 339, 296, 188, 206, 286, 203, 150, 185, 306
|154, 155, 92, 175, 165, 199, 120, 154, 170, 174, 86, 258, 211, 145, 234, 186, 136, 70, 190, 164, 217, 100, 189, 124, 219, 277, 94, 234, 132, 152, 168, 284, 232, 159, 163, 240, 172, 108, 155, 247
|354, 286, 301, 381, 374, 401, 307, 366, 352, 347, 280, 450, 377, 312, 431, 357, 308, 259, 402, 374, 403, 287, 369, 275, 372, 456, 291, 351, 321, 360, 372, 468, 401, 371, 370, 440, 384, 320, 368, 425
|292, 384, 338, 262, 267, 249, 340, 273, 309, 321, 360, 235, 314, 347, 234, 318, 347, 380, 237, 266, 273, 355, 300, 378, 334, 261, 349, 384, 328, 281, 274, 245, 300, 269, 272, 223, 255, 319, 272, 273
|259, 191, 211, 288, 281, 306, 211, 277, 256, 251, 187, 353, 281, 216, 335, 261, 211, 170, 311, 282, 306, 193, 273, 178, 277, 360, 198, 262, 225, 267, 277, 372, 305, 281, 277, 344, 293, 231, 278, 329
|546, 468, 559, 569, 575, 561, 523, 600, 511, 496, 539, 542, 480, 496, 554, 491, 503, 548, 608, 582, 519, 529, 507, 496, 458, 511, 540, 413, 523, 569, 557, 526, 484, 596, 570, 563, 598, 577, 596, 505
|578, 483, 563, 608, 609, 612, 538, 622, 552, 538, 537, 621, 541, 520, 621, 539, 523, 533, 645, 613, 582, 534, 557, 501, 521, 603, 543, 471, 546, 598, 595, 619, 555, 622, 603, 632, 629, 584, 620, 583
|189, 285, 231, 158, 162, 154, 236, 166, 213, 227, 254, 175, 231, 247, 157, 227, 246, 273, 130, 160, 191, 250, 209, 274, 253, 211, 243, 302, 225, 175, 172, 202, 226, 161, 167, 148, 148, 212, 164, 207
|293, 214, 305, 318, 323, 312, 268, 346, 259, 244, 286, 306, 233, 242, 312, 240, 248, 296, 357, 329, 274, 275, 257, 243, 211, 281, 286, 162, 269, 316, 305, 297, 242, 343, 317, 322, 345, 322, 343, 267
|539, 601, 601, 518, 529, 493, 583, 551, 534, 539, 614, 437, 510, 573, 459, 529, 579, 639, 516, 532, 483, 604, 516, 611, 518, 430, 603, 552, 568, 541, 524, 417, 486, 544, 531, 452, 529, 589, 547, 460
|285, 235, 317, 303, 311, 290, 277, 341, 249, 236, 304, 264, 211, 249, 278, 228, 257, 322, 341, 318, 245, 292, 241, 265, 191, 233, 301, 156, 272, 308, 292, 248, 209, 335, 307, 287, 333, 329, 336, 228
|502, 442, 530, 520, 528, 506, 491, 558, 466, 453, 514, 473, 428, 462, 491, 445, 470, 529, 558, 536, 461, 502, 458, 473, 408, 439, 512, 370, 487, 525, 509, 452, 425, 552, 524, 499, 550, 544, 553, 441
|323, 229, 293, 354, 351, 364, 277, 357, 305, 294, 267, 393, 310, 267, 384, 299, 266, 259, 386, 354, 347, 267, 316, 238, 297, 387, 276, 257, 287, 338, 341, 402, 332, 358, 346, 394, 369, 315, 357, 360
|384, 454, 363, 368, 359, 387, 399, 328, 420, 433, 384, 438, 459, 427, 412, 441, 420, 379, 333, 351, 433, 393, 429, 426, 479, 474, 382, 516, 400, 361, 378, 469, 467, 334, 363, 408, 338, 345, 333, 459
|233, 138, 212, 264, 262, 273, 189, 273, 212, 201, 187, 300, 217, 176, 291, 206, 177, 186, 298, 266, 254, 183, 223, 151, 203, 294, 193, 167, 198, 251, 251, 309, 238, 273, 257, 301, 281, 234, 271, 267
|334, 421, 334, 310, 304, 322, 363, 281, 368, 383, 359, 361, 401, 387, 339, 388, 382, 362, 272, 298, 367, 364, 373, 397, 423, 397, 353, 467, 360, 311, 323, 388, 403, 284, 310, 332, 282, 313, 284, 389
|470, 566, 507, 440, 443, 432, 517, 441, 492, 505, 532, 424, 501, 528, 421, 503, 527, 548, 409, 440, 460, 529, 485, 556, 522, 449, 522, 572, 506, 455, 453, 434, 489, 438, 448, 410, 426, 486, 440, 462
|508, 437, 528, 530, 537, 519, 490, 564, 473, 459, 510, 494, 439, 462, 509, 452, 470, 521, 569, 544, 475, 499, 467, 467, 418, 462, 509, 375, 489, 532, 518, 476, 440, 559, 532, 518, 559, 544, 560, 459
|190, 272, 185, 172, 163, 191, 215, 135, 225, 239, 210, 245, 263, 239, 218, 246, 233, 216, 137, 156, 236, 215, 234, 248, 283, 280, 204, 324, 212, 166, 182, 277, 270, 139, 167, 215, 141, 164, 139, 263
|261, 177, 269, 287, 291, 285, 233, 313, 228, 214, 248, 287, 208, 207, 289, 211, 213, 258, 326, 297, 250, 239, 229, 206, 188, 268, 249, 137, 234, 283, 274, 284, 221, 310, 286, 299, 313, 286, 310, 249
|371, 300, 390, 393, 399, 383, 352, 426, 336, 321, 372, 364, 303, 324, 376, 315, 332, 384, 432, 406, 341, 361, 331, 330, 281, 335, 371, 237, 351, 394, 381, 350, 306, 421, 394, 385, 422, 406, 422, 327
|];

% Define sets I and J
int: I;
int: J;

int: C; % Cost of installing a warehouse in all zones
int: CV; % Capacity in green zone
int: CC; % Capacity in blue zone

array[1..I] of int: O_i; % Emissions per operation for each warehouse i
array[1..I, 1..J] of int: D_ij; % Distance between warehouse i and store j
array[1..I, 1..J] of int: E_ij; % Transportation emissions
array[1..I] of int: V_i; % 1 if warehouse i is in the green zone, 0 if in the blue zone

% Define decision variables
array[1..I, 1..J] of var 0..1: X; % 1 if warehouse i supplies store j, 0 otherwise
array[1..I] of var 0..1: Y;

% Define constraints

% Add the constraint to ensure Y_i is 1 if the warehouse I supplies at least one store
constraint forall(i in 1..I)(
  sum(j in 1..J)(X[i,j]) > 0 -> Y[i] == 1
);

% Emissions constraint
constraint sum(i in 1..I, j in 1..J)(E_ij[i, j] * X[i, j]) + sum(i in 1..I)(O_i[i] * Y[i]) <= 500 * J;

% Assignment constraint
constraint forall(j in 1..J)(sum(i in 1..I)(X[i, j]) == 1);

% Green zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * V_i[i]) <= CV);

% Blue zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * (1 - V_i[i])) <= CC);

% Solve the optimization problem using a solver
% Define the objective function
solve minimize sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i]);

output ["Solution:", ""];
output ["X = \n", show2d(X), ";"];
output ["\n"];
output ["Y = ", show(Y), ";"];
output ["\n"];
output ["FO = ", show(sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i])), "\n"];