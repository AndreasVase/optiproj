I = 19;
J = 33;
C = 1785;
CV = 7;
CC = 14;
O_i = [34, 34, 33, 25, 58, 40, 26, 45, 53, 45, 28, 61, 23, 56, 34, 49, 27, 30, 61];
V_i = [1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1];
D_ij = 
[|206, 196, 206, 225, 225, 223, 208, 177, 201, 225, 156, 183, 152, 164, 176, 219, 111, 240, 211, 173, 135, 107, 223, 182, 122, 206, 230, 204, 191, 145, 180, 186, 152
|164, 68, 84, 145, 126, 112, 85, 81, 125, 117, 121, 89, 117, 98, 53, 145, 74, 126, 110, 74, 72, 79, 114, 93, 71, 81, 116, 118, 68, 119, 99, 125, 107
|116, 254, 241, 162, 195, 218, 243, 208, 167, 213, 156, 201, 160, 180, 247, 154, 211, 223, 203, 214, 204, 208, 214, 196, 208, 247, 225, 180, 244, 160, 186, 156, 169
|281, 271, 255, 238, 230, 233, 254, 277, 259, 230, 314, 272, 316, 293, 287, 247, 344, 216, 243, 283, 320, 349, 233, 273, 334, 258, 226, 253, 271, 325, 277, 278, 311
|192, 143, 157, 195, 186, 179, 158, 137, 172, 183, 141, 144, 136, 136, 125, 192, 84, 195, 171, 131, 103, 84, 180, 145, 92, 155, 185, 171, 140, 133, 146, 163, 132
|270, 287, 295, 301, 307, 308, 297, 263, 279, 310, 226, 267, 223, 244, 266, 293, 195, 325, 295, 259, 219, 189, 308, 265, 205, 295, 317, 285, 281, 215, 261, 261, 227
|57, 172, 157, 73, 105, 128, 157, 132, 87, 123, 108, 125, 113, 116, 171, 69, 164, 130, 117, 140, 147, 164, 125, 120, 157, 162, 134, 98, 163, 118, 113, 87, 116
|225, 135, 152, 213, 195, 181, 153, 149, 192, 186, 177, 158, 172, 161, 122, 213, 120, 195, 179, 142, 130, 123, 183, 160, 124, 149, 185, 186, 137, 171, 165, 189, 164
|355, 253, 272, 341, 320, 303, 272, 277, 321, 309, 306, 285, 302, 290, 245, 341, 249, 315, 304, 269, 260, 251, 305, 288, 253, 267, 305, 314, 258, 300, 294, 319, 294
|318, 181, 192, 272, 239, 216, 190, 229, 266, 221, 294, 234, 291, 261, 193, 279, 263, 214, 230, 225, 252, 269, 219, 239, 257, 186, 210, 252, 191, 297, 250, 279, 280
|251, 251, 234, 210, 205, 210, 233, 253, 232, 206, 286, 247, 288, 267, 267, 218, 319, 194, 219, 259, 295, 323, 209, 248, 308, 238, 204, 226, 251, 297, 251, 250, 283
|94, 210, 193, 111, 141, 164, 194, 171, 126, 158, 146, 164, 150, 155, 209, 107, 202, 163, 154, 179, 186, 202, 161, 159, 195, 199, 169, 136, 201, 155, 152, 127, 154
|307, 172, 188, 271, 241, 219, 188, 215, 259, 225, 272, 222, 268, 243, 176, 276, 228, 224, 228, 209, 224, 233, 222, 227, 225, 183, 216, 247, 181, 271, 237, 267, 257
|232, 174, 163, 178, 157, 150, 161, 195, 193, 149, 248, 192, 249, 220, 194, 189, 263, 133, 165, 198, 239, 269, 151, 195, 252, 164, 141, 182, 178, 258, 202, 214, 241
|170, 188, 195, 197, 203, 205, 197, 159, 174, 206, 123, 163, 120, 139, 168, 190, 92, 222, 191, 156, 115, 86, 204, 161, 102, 195, 214, 180, 181, 112, 156, 157, 123
|178, 264, 263, 227, 248, 260, 265, 221, 212, 259, 158, 221, 158, 190, 246, 217, 169, 275, 243, 222, 184, 162, 258, 217, 176, 266, 270, 223, 255, 149, 207, 191, 168
|180, 250, 251, 225, 242, 252, 254, 210, 207, 252, 151, 211, 150, 181, 231, 215, 152, 267, 236, 210, 170, 146, 250, 207, 160, 254, 262, 217, 241, 141, 199, 186, 159
|134, 129, 111, 84, 76, 83, 110, 124, 104, 79, 160, 118, 162, 138, 142, 94, 190, 68, 90, 130, 165, 194, 82, 118, 179, 115, 78, 97, 127, 171, 122, 124, 156
|127, 264, 253, 178, 211, 232, 254, 216, 179, 227, 157, 210, 161, 186, 254, 169, 209, 239, 216, 221, 205, 205, 229, 205, 208, 258, 240, 193, 253, 159, 194, 165, 171
|];
E_ij = 
[|343, 328, 344, 371, 371, 368, 346, 300, 336, 372, 268, 309, 262, 281, 298, 362, 201, 394, 351, 293, 237, 195, 368, 307, 217, 343, 380, 341, 321, 252, 304, 314, 262
|280, 136, 160, 252, 223, 202, 162, 156, 222, 210, 216, 168, 210, 181, 113, 252, 145, 224, 199, 145, 143, 153, 205, 173, 141, 156, 208, 212, 136, 213, 183, 222, 195
|207, 414, 395, 276, 326, 360, 397, 345, 284, 352, 267, 335, 273, 304, 403, 264, 349, 367, 338, 354, 339, 345, 355, 327, 345, 403, 370, 304, 399, 273, 312, 267, 287
|447, 431, 408, 382, 371, 375, 406, 441, 414, 370, 496, 433, 499, 465, 456, 395, 542, 350, 390, 449, 505, 549, 374, 435, 526, 412, 364, 404, 432, 513, 440, 443, 491
|347, 273, 293, 351, 338, 326, 296, 264, 316, 332, 269, 275, 262, 262, 245, 346, 184, 351, 315, 255, 213, 184, 328, 276, 196, 290, 336, 314, 269, 257, 278, 302, 256
|446, 471, 483, 492, 501, 503, 486, 434, 458, 506, 380, 441, 375, 406, 440, 480, 332, 528, 483, 429, 369, 324, 502, 438, 348, 483, 516, 467, 462, 362, 431, 431, 381
|111, 285, 261, 136, 184, 219, 262, 225, 157, 210, 189, 213, 195, 200, 282, 129, 272, 221, 201, 236, 247, 272, 214, 207, 261, 270, 227, 173, 271, 204, 195, 157, 201
|383, 248, 274, 365, 338, 317, 275, 269, 333, 325, 310, 282, 304, 286, 228, 364, 226, 338, 314, 258, 241, 230, 320, 286, 231, 268, 323, 325, 250, 302, 293, 329, 292
|585, 433, 461, 564, 533, 508, 462, 469, 534, 516, 512, 481, 506, 489, 420, 565, 427, 525, 509, 457, 444, 430, 511, 486, 433, 454, 510, 524, 440, 503, 494, 531, 494
|522, 316, 333, 453, 403, 369, 330, 389, 444, 377, 486, 396, 482, 437, 335, 464, 440, 367, 390, 382, 423, 449, 374, 404, 431, 325, 360, 424, 332, 491, 421, 464, 465
|405, 404, 380, 343, 336, 343, 378, 408, 376, 338, 457, 399, 461, 429, 428, 356, 507, 319, 357, 416, 470, 513, 342, 400, 491, 385, 334, 368, 404, 474, 404, 404, 453
|202, 376, 351, 227, 273, 307, 353, 318, 251, 299, 280, 307, 286, 294, 375, 222, 364, 306, 292, 329, 340, 364, 302, 300, 354, 360, 314, 265, 363, 293, 289, 251, 293
|483, 281, 306, 430, 385, 351, 305, 346, 411, 360, 431, 357, 425, 387, 287, 437, 365, 359, 365, 337, 360, 373, 356, 364, 361, 297, 347, 394, 295, 430, 379, 423, 409
|405, 318, 300, 324, 292, 281, 297, 349, 346, 280, 428, 344, 430, 386, 347, 340, 451, 256, 304, 354, 415, 459, 283, 349, 435, 302, 268, 329, 324, 444, 359, 378, 417
|290, 316, 326, 329, 338, 342, 329, 273, 296, 344, 219, 279, 214, 243, 286, 319, 172, 367, 321, 269, 207, 163, 341, 276, 187, 327, 355, 304, 306, 202, 269, 270, 219
|316, 446, 444, 390, 422, 440, 447, 381, 367, 438, 286, 381, 286, 334, 418, 375, 303, 462, 414, 382, 326, 293, 437, 374, 313, 448, 454, 384, 431, 273, 360, 335, 301
|297, 403, 404, 364, 391, 405, 408, 343, 338, 405, 254, 344, 253, 299, 374, 350, 256, 428, 381, 342, 283, 246, 403, 338, 268, 408, 420, 353, 389, 239, 325, 306, 266
|231, 224, 197, 157, 144, 155, 196, 217, 186, 148, 270, 207, 273, 237, 243, 171, 315, 133, 165, 225, 278, 321, 153, 208, 299, 203, 148, 176, 220, 286, 213, 216, 264
|251, 457, 440, 328, 377, 409, 443, 385, 329, 402, 297, 377, 302, 340, 442, 314, 374, 420, 386, 393, 369, 369, 404, 368, 373, 448, 421, 350, 441, 300, 353, 308, 318
|];

% Define sets I and J
int: I;
int: J;

int: C; % Cost of installing a warehouse in all zones
int: CV; % Capacity in green zone
int: CC; % Capacity in blue zone

array[1..I] of int: O_i; % Emissions per operation for each warehouse i
array[1..I, 1..J] of int: D_ij; % Distance between warehouse i and store j
array[1..I, 1..J] of int: E_ij; % Transportation emissions
array[1..I] of int: V_i; % 1 if warehouse i is in the green zone, 0 if in the blue zone

% Define decision variables
array[1..I, 1..J] of var 0..1: X; % 1 if warehouse i supplies store j, 0 otherwise
array[1..I] of var 0..1: Y;

% Define constraints

% Add the constraint to ensure Y_i is 1 if the warehouse I supplies at least one store
constraint forall(i in 1..I)(
  sum(j in 1..J)(X[i,j]) > 0 -> Y[i] == 1
);

% Emissions constraint
constraint sum(i in 1..I, j in 1..J)(E_ij[i, j] * X[i, j]) + sum(i in 1..I)(O_i[i] * Y[i]) <= 500 * J;

% Assignment constraint
constraint forall(j in 1..J)(sum(i in 1..I)(X[i, j]) == 1);

% Green zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * V_i[i]) <= CV);

% Blue zone capacity constraint
constraint forall(i in 1..I)(sum(j in 1..J)(X[i, j] * (1 - V_i[i])) <= CC);

% Solve the optimization problem using a solver
% Define the objective function
solve minimize sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i]);

output ["Solution:", ""];
output ["X = \n", show2d(X), ";"];
output ["\n"];
output ["Y = ", show(Y), ";"];
output ["\n"];
output ["FO = ", show(sum(i in 1..I, j in 1..J)(1.25 * D_ij[i, j] * X[i, j]) + sum(i in 1..I)(C * Y[i])), "\n"];